//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    public partial class File : object
    {
        
        private bool DeletedField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.FileProperty> FilePropertiesField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.FileProperty> FileProperties
        {
            get
            {
                return this.FilePropertiesField;
            }
            set
            {
                this.FilePropertiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileProperty", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    public partial class FileProperty : object
    {
        
        private ServiceReferenceMyPhotos.File FileField;
        
        private System.Guid FileIdField;
        
        private System.Guid IdField;
        
        private ServiceReferenceMyPhotos.Property PropertyField;
        
        private System.Guid PropertyIdField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Property Property
        {
            get
            {
                return this.PropertyField;
            }
            set
            {
                this.PropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyId
        {
            get
            {
                return this.PropertyIdField;
            }
            set
            {
                this.PropertyIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    public partial class Property : object
    {
        
        private string DataTypeField;
        
        private string DescriptionField;
        
        private bool EditableField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.FileProperty> FilePropertiesField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType
        {
            get
            {
                return this.DataTypeField;
            }
            set
            {
                this.DataTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Editable
        {
            get
            {
                return this.EditableField;
            }
            set
            {
                this.EditableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.FileProperty> FileProperties
        {
            get
            {
                return this.FilePropertiesField;
            }
            set
            {
                this.FilePropertiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IDatabase")]
    public interface IDatabase
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/CreateFile", ReplyAction="http://tempuri.org/InterfaceFile/CreateFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> CreateFileAsync(string path, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFile", ReplyAction="http://tempuri.org/InterfaceFile/GetFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction="http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetAllFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFileByPath", ReplyAction="http://tempuri.org/InterfaceFile/GetFileByPathResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileByPathAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFileByName", ReplyAction="http://tempuri.org/InterfaceFile/GetFileByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction="http://tempuri.org/InterfaceFile/UpdateFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> UpdateFileAsync(System.Guid id, string name, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction="http://tempuri.org/InterfaceFile/DeleteFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> DeleteFileAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/RemoveFile", ReplyAction="http://tempuri.org/InterfaceFile/RemoveFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> RemoveFileAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/InitDefaultProperties", ReplyAction="http://tempuri.org/InterfaceProperty/InitDefaultPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> InitDefaultPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/CreateProperty", ReplyAction="http://tempuri.org/InterfaceProperty/CreatePropertyResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> CreatePropertyAsync(string name, string description, string dataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetAllPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetProperty", ReplyAction="http://tempuri.org/InterfaceProperty/GetPropertyResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> GetPropertyAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetPropertyByName", ReplyAction="http://tempuri.org/InterfaceProperty/GetPropertyByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> GetPropertyByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/UpdateProperty", ReplyAction="http://tempuri.org/InterfaceProperty/UpdatePropertyResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> UpdatePropertyAsync(System.Guid id, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction="http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> DeletePropertyAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/AddPropertyToFile", ReplyAction="http://tempuri.org/InterfaceFileProperty/AddPropertyToFileResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> AddPropertyToFileAsync(System.Guid fileId, System.Guid propertyId, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/GetFileProperty", ReplyAction="http://tempuri.org/InterfaceFileProperty/GetFilePropertyResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> GetFilePropertyAsync(System.Guid fileId, System.Guid propertyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/GetFileProperties", ReplyAction="http://tempuri.org/InterfaceFileProperty/GetFilePropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetFilePropertiesAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/GetFilesWithProperty", ReplyAction="http://tempuri.org/InterfaceFileProperty/GetFilesWithPropertyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetFilesWithPropertyAsync(System.Guid propertyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/UpdateValue", ReplyAction="http://tempuri.org/InterfaceFileProperty/UpdateValueResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> UpdateValueAsync(System.Guid fileId, System.Guid propertyId, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/RemoveProperty", ReplyAction="http://tempuri.org/InterfaceFileProperty/RemovePropertyResponse")]
        System.Threading.Tasks.Task RemovePropertyAsync(System.Guid fileId, System.Guid propertyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFileProperty/IsValueValid", ReplyAction="http://tempuri.org/InterfaceFileProperty/IsValueValidResponse")]
        System.Threading.Tasks.Task<bool> IsValueValidAsync(string value, string dataType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IDatabaseChannel : ServiceReferenceMyPhotos.IDatabase, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class DatabaseClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IDatabase>, ServiceReferenceMyPhotos.IDatabase
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DatabaseClient() : 
                base(DatabaseClient.GetDefaultBinding(), DatabaseClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IDatabase.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DatabaseClient(EndpointConfiguration endpointConfiguration) : 
                base(DatabaseClient.GetBindingForEndpoint(endpointConfiguration), DatabaseClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DatabaseClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DatabaseClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DatabaseClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DatabaseClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DatabaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> CreateFileAsync(string path, string name)
        {
            return base.Channel.CreateFileAsync(path, name);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileAsync(System.Guid id)
        {
            return base.Channel.GetFileAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetAllFilesAsync()
        {
            return base.Channel.GetAllFilesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileByPathAsync(string path)
        {
            return base.Channel.GetFileByPathAsync(path);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> GetFileByNameAsync(string name)
        {
            return base.Channel.GetFileByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> UpdateFileAsync(System.Guid id, string name, string path)
        {
            return base.Channel.UpdateFileAsync(id, name, path);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> DeleteFileAsync(System.Guid id)
        {
            return base.Channel.DeleteFileAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.File> RemoveFileAsync(System.Guid id)
        {
            return base.Channel.RemoveFileAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> InitDefaultPropertiesAsync()
        {
            return base.Channel.InitDefaultPropertiesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> CreatePropertyAsync(string name, string description, string dataType)
        {
            return base.Channel.CreatePropertyAsync(name, description, dataType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetAllPropertiesAsync()
        {
            return base.Channel.GetAllPropertiesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> GetPropertyAsync(System.Guid id)
        {
            return base.Channel.GetPropertyAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> GetPropertyByNameAsync(string name)
        {
            return base.Channel.GetPropertyByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> UpdatePropertyAsync(System.Guid id, string name, string description)
        {
            return base.Channel.UpdatePropertyAsync(id, name, description);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Property> DeletePropertyAsync(System.Guid id)
        {
            return base.Channel.DeletePropertyAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> AddPropertyToFileAsync(System.Guid fileId, System.Guid propertyId, string value)
        {
            return base.Channel.AddPropertyToFileAsync(fileId, propertyId, value);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> GetFilePropertyAsync(System.Guid fileId, System.Guid propertyId)
        {
            return base.Channel.GetFilePropertyAsync(fileId, propertyId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetFilePropertiesAsync(System.Guid fileId)
        {
            return base.Channel.GetFilePropertiesAsync(fileId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetFilesWithPropertyAsync(System.Guid propertyId)
        {
            return base.Channel.GetFilesWithPropertyAsync(propertyId);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.FileProperty> UpdateValueAsync(System.Guid fileId, System.Guid propertyId, string value)
        {
            return base.Channel.UpdateValueAsync(fileId, propertyId, value);
        }
        
        public System.Threading.Tasks.Task RemovePropertyAsync(System.Guid fileId, System.Guid propertyId)
        {
            return base.Channel.RemovePropertyAsync(fileId, propertyId);
        }
        
        public System.Threading.Tasks.Task<bool> IsValueValidAsync(string value, string dataType)
        {
            return base.Channel.IsValueValidAsync(value, dataType);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDatabase))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDatabase))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/MyPhotos");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DatabaseClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDatabase);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DatabaseClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDatabase);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IDatabase,
        }
    }
}
